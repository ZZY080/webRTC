[{"E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\index.js":"1","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\App.js":"2","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\serviceWorker.js":"3","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\store\\store.js":"4","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\utils\\wss.js":"5","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\store\\reducer.js":"6","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\IntroductionPage\\IntroductionPage.js":"7","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\JoinRoomPage\\JoinRoomPage.js":"8","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\RoomPage.js":"9","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\utils\\webRTCHandler.js":"10","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\store\\actions.js":"11","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\utils\\directMessages.js":"12","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\JoinRoomPage\\JoinRoomTitle.js":"13","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\IntroductionPage\\ConnectingButtons.js":"14","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\JoinRoomPage\\JoinRoomContent.js":"15","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\RoomLabel.js":"16","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\Overlay.js":"17","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\ChatSection\\ChatSection.js":"18","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\ParticipantsSection\\ParticipantsSection.js":"19","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\VideoSection\\VideoSection.js":"20","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\JoinRoomPage\\JoinRoomInputs.js":"21","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\IntroductionPage\\ConnectingButton.js":"22","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\JoinRoomPage\\OnlyWithAudioCheckbox.js":"23","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\JoinRoomPage\\ErrorMessage.js":"24","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\JoinRoomPage\\JoinRoomButtons.js":"25","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\utils\\api.js":"26","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\ChatSection\\NewMessage.js":"27","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\ChatSection\\Messages.js":"28","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\ChatSection\\ChatLabel.js":"29","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\ParticipantsSection\\ParticipantsLabel.js":"30","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\VideoSection\\VideoButtons.js":"31","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\ParticipantsSection\\Participants.js":"32","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\ParticipantsSection\\DirectChat\\DirectChat.js":"33","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\VideoSection\\MicButton.js":"34","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\VideoSection\\CameraButton.js":"35","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\VideoSection\\SwitchToScreenSharingButton.js":"36","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\VideoSection\\LeaveRoomButton.js":"37","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\ParticipantsSection\\DirectChat\\MessagesContainer.js":"38","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\ParticipantsSection\\DirectChat\\ConversationNotChosen.js":"39","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\ParticipantsSection\\DirectChat\\DirectChatHeader.js":"40","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\ParticipantsSection\\DirectChat\\NewMessage.js":"41","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\VideoSection\\LocalScreenSharingPreview.js":"42"},{"size":629,"mtime":1638524955000,"results":"43","hashOfConfig":"44"},{"size":713,"mtime":1639043036000,"results":"45","hashOfConfig":"44"},{"size":5014,"mtime":1638523187000,"results":"46","hashOfConfig":"44"},{"size":161,"mtime":1639039501000,"results":"47","hashOfConfig":"44"},{"size":2378,"mtime":1640225933000,"results":"48","hashOfConfig":"44"},{"size":1613,"mtime":1640225933000,"results":"49","hashOfConfig":"44"},{"size":861,"mtime":1640180878000,"results":"50","hashOfConfig":"44"},{"size":1466,"mtime":1640180880000,"results":"51","hashOfConfig":"44"},{"size":1236,"mtime":1640225933000,"results":"52","hashOfConfig":"44"},{"size":8423,"mtime":1640225933000,"results":"53","hashOfConfig":"44"},{"size":1701,"mtime":1640225933000,"results":"54","hashOfConfig":"44"},{"size":2162,"mtime":1640225933000,"results":"55","hashOfConfig":"44"},{"size":229,"mtime":1638782898000,"results":"56","hashOfConfig":"44"},{"size":870,"mtime":1638774767000,"results":"57","hashOfConfig":"44"},{"size":2548,"mtime":1638957900000,"results":"58","hashOfConfig":"44"},{"size":225,"mtime":1638967383000,"results":"59","hashOfConfig":"44"},{"size":184,"mtime":1639039334000,"results":"60","hashOfConfig":"44"},{"size":330,"mtime":1640225933000,"results":"61","hashOfConfig":"44"},{"size":402,"mtime":1640225933000,"results":"62","hashOfConfig":"44"},{"size":229,"mtime":1639019877000,"results":"63","hashOfConfig":"44"},{"size":1057,"mtime":1638785639000,"results":"64","hashOfConfig":"44"},{"size":387,"mtime":1638774740000,"results":"65","hashOfConfig":"44"},{"size":709,"mtime":1638946107000,"results":"66","hashOfConfig":"44"},{"size":279,"mtime":1638947030000,"results":"67","hashOfConfig":"44"},{"size":929,"mtime":1638951178000,"results":"68","hashOfConfig":"44"},{"size":226,"mtime":1638953169000,"results":"69","hashOfConfig":"44"},{"size":1171,"mtime":1640225933000,"results":"70","hashOfConfig":"44"},{"size":1288,"mtime":1640225933000,"results":"71","hashOfConfig":"44"},{"size":210,"mtime":1640225933000,"results":"72","hashOfConfig":"44"},{"size":245,"mtime":1639018267000,"results":"73","hashOfConfig":"44"},{"size":685,"mtime":1640225933000,"results":"74","hashOfConfig":"44"},{"size":1637,"mtime":1640225933000,"results":"75","hashOfConfig":"44"},{"size":1377,"mtime":1640225933000,"results":"76","hashOfConfig":"44"},{"size":695,"mtime":1640225933000,"results":"77","hashOfConfig":"44"},{"size":790,"mtime":1640225933000,"results":"78","hashOfConfig":"44"},{"size":1715,"mtime":1640225933000,"results":"79","hashOfConfig":"44"},{"size":471,"mtime":1639035780000,"results":"80","hashOfConfig":"44"},{"size":1181,"mtime":1640225933000,"results":"81","hashOfConfig":"44"},{"size":276,"mtime":1640225933000,"results":"82","hashOfConfig":"44"},{"size":314,"mtime":1640225933000,"results":"83","hashOfConfig":"44"},{"size":1313,"mtime":1640225933000,"results":"84","hashOfConfig":"44"},{"size":489,"mtime":1640225933000,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qotb57",{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\index.js",[],"E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\App.js",[],"E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\serviceWorker.js",[],"E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\store\\store.js",[],"E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\utils\\wss.js",[],"E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\store\\reducer.js",[],"E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\IntroductionPage\\IntroductionPage.js",["179","180"],"import React, { useEffect } from 'react';\nimport logo from '../../resources/images/logo.png';\nimport ConnectingButtons from './ConnectingButtons';\nimport './IntroductionPage.css';\nimport { connect } from 'react-redux';\nimport { setIsRootHost } from '../../store/actions';\nconst IntroductionPage = ({ setIsRoomHostAction }) => {\n  //默认host状态为false\n  useEffect(() => {\n    setIsRoomHostAction(false);\n  }, []);\n\n  return (\n    <div className='introduction_page_container'>\n      <div className='introduction_page_panel'>\n        <img src={logo} className='introduction_page_image' />\n        <ConnectingButtons />\n      </div>\n    </div>\n  );\n};\n\nconst mapActionsToProps = (dispatch) => {\n  return {\n    setIsRoomHostAction: (isRoomHost) => dispatch(setIsRootHost(isRoomHost)),\n  };\n};\nexport default connect(null, mapActionsToProps)(IntroductionPage);\n","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\JoinRoomPage\\JoinRoomPage.js",["181"],"import React, { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setIsRootHost } from '../../store/actions';\nimport JoinRoomTitle from './JoinRoomTitle';\nimport './JoinRoomPage.css';\nimport JoinRoomContent from './JoinRoomContent';\n\nconst JoinRoomPage = (props) => {\n  const { setIsRoomHostAction, isRoomHost } = props;\n  //useLocaltion返回URL的location对象，search属性返回的是问号之后的查询字符串\n  const search = useLocation().search;\n\n  useEffect(() => {\n    const isRoomHost = new URLSearchParams(search).get('host');\n\n    if (isRoomHost) {\n      //将主持人的状态保存到redux的store里面\n      setIsRoomHostAction(isRoomHost);\n    }\n  }, []);\n  return (\n    <div className='join_room_page_container'>\n      <div className='join_room_page_panel'>\n        <JoinRoomTitle isRoomHost={isRoomHost} />\n        <JoinRoomContent />\n      </div>\n    </div>\n  );\n};\n\n//将 store 作为 props 绑定到组件上\nconst mapStateToProps = (state) => {\n  return {\n    ...state,\n  };\n};\n\n//将 action 作为 props 绑定到组件上，\nconst mapActionsToProps = (dispatch) => {\n  return {\n    setIsRoomHostAction: (isRoomHost) => dispatch(setIsRootHost(isRoomHost)),\n  };\n};\n\n//connect 方法，链接react组件与redux store，允许我们将 store 中的数据作为 props 绑定到组件上。\nexport default connect(mapStateToProps, mapActionsToProps)(JoinRoomPage);\n","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\RoomPage.js",["182"],"import React, { useEffect } from 'react';\nimport ChatSection from './ChatSection/ChatSection';\nimport ParticipantsSection from './ParticipantsSection/ParticipantsSection';\nimport RoomLabel from './RoomLabel';\nimport { connect } from 'react-redux';\nimport * as webRTCHandler from '../../utils/webRTCHandler';\nimport './Roompage.css';\nimport VideoSection from './VideoSection/VideoSection';\nimport Overlay from './Overlay';\nconst RoomPage = ({\n  roomId,\n  isRoomHost,\n  identity,\n  showOverlay,\n  connectOnlyWithAudio,\n}) => {\n  useEffect(() => {\n    //路由守卫\n    if (!isRoomHost && !roomId) {\n      // 动态获取接口\n      const siteUrl = window.location.origin;\n      // 设置当前定向到的URL\n      window.location.href = siteUrl;\n    }\n    webRTCHandler.getLocalPreviewAndInitRoomConnection(\n      isRoomHost,\n      identity,\n      roomId,\n      connectOnlyWithAudio\n    );\n  }, []);\n\n  return (\n    <div className='room_container'>\n      <ParticipantsSection />\n      <VideoSection />\n      <ChatSection />\n      <RoomLabel roomId={roomId} />\n      {showOverlay && <Overlay />}\n    </div>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    ...state,\n  };\n};\nexport default connect(mapStateToProps)(RoomPage);\n","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\utils\\webRTCHandler.js",[],"E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\store\\actions.js",[],"E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\utils\\directMessages.js",[],"E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\JoinRoomPage\\JoinRoomTitle.js",[],"E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\IntroductionPage\\ConnectingButtons.js",[],"E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\JoinRoomPage\\JoinRoomContent.js",[],"E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\RoomLabel.js",[],"E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\Overlay.js",[],"E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\ChatSection\\ChatSection.js",[],"E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\ParticipantsSection\\ParticipantsSection.js",[],"E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\VideoSection\\VideoSection.js",[],"E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\JoinRoomPage\\JoinRoomInputs.js",[],"E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\IntroductionPage\\ConnectingButton.js",[],"E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\JoinRoomPage\\OnlyWithAudioCheckbox.js",["183"],"import React from 'react';\nimport CheckImg from '../../resources/images/check.png';\nconst OnlyWithAudioCheckbox = ({\n  setConnectOnlyWithAudio,\n  connectOnlyWithAudio,\n}) => {\n  const handleConnectionTypeChange = () => {\n    //将连接的状态类型存储到store当中\n    setConnectOnlyWithAudio(!connectOnlyWithAudio);\n  };\n  return (\n    <div className='checkbox_container'>\n      <div className='checkbox_connection' onClick={handleConnectionTypeChange}>\n        {connectOnlyWithAudio && (\n          <img className='checkbox_image' src={CheckImg} />\n        )}\n      </div>\n      <p className='checkbox_container_paragraph'>只开启音频</p>\n    </div>\n  );\n};\n\nexport default OnlyWithAudioCheckbox;\n","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\JoinRoomPage\\ErrorMessage.js",[],"E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\JoinRoomPage\\JoinRoomButtons.js",[],"E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\utils\\api.js",[],"E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\ChatSection\\NewMessage.js",["184"],"import React, { useState } from 'react';\nimport SendMessageButton from '../../../resources/images/sendMessageButton.svg';\nimport * as webRTCHandler from '../../../utils/webRTCHandler';\nconst NewMessage = () => {\n  const [message, setMessage] = useState('');\n  const handleTextChange = (event) => {\n    setMessage(event.target.value);\n  };\n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n\n      //发送消息给其他用户\n      sendMessage();\n    }\n  };\n  const sendMessage = () => {\n    // console.log('发送消息给其他用户...');\n    // console.log(message);\n    //执行发送消息函数\n    webRTCHandler.sendMessageUsingDataChannel(message);\n    setMessage('');\n  };\n  return (\n    <div className='new_message_container'>\n      <input\n        type='text'\n        className='new_message_input'\n        value={message}\n        onChange={handleTextChange}\n        onKeyDown={handleKeyDown}\n        placeholder='请输入消息...'\n      />\n      <img\n        className='new_message_button'\n        src={SendMessageButton}\n        onClick={sendMessage}\n      />\n    </div>\n  );\n};\n\nexport default NewMessage;\n","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\ChatSection\\Messages.js",[],"E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\ChatSection\\ChatLabel.js",[],"E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\ParticipantsSection\\ParticipantsLabel.js",[],"E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\VideoSection\\VideoButtons.js",[],"E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\ParticipantsSection\\Participants.js",[],"E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\ParticipantsSection\\DirectChat\\DirectChat.js",[],"E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\VideoSection\\MicButton.js",["185"],"import React, { useState } from 'react';\nimport MicButtonImg from '../../../resources/images/mic.svg';\nimport MicButtonImgOff from '../../../resources/images/micOff.svg';\nimport * as webRTCHandler from '../../../utils/webRTCHandler';\nconst MicButton = () => {\n  const [isMicMuted, setIsMicMuted] = useState(false);\n\n  const handleMicButtonPressed = () => {\n    webRTCHandler.toggleMic(isMicMuted);\n    setIsMicMuted(!isMicMuted);\n  };\n  return (\n    <div className='video_button_container'>\n      <img\n        src={isMicMuted ? MicButtonImgOff : MicButtonImg}\n        onClick={handleMicButtonPressed}\n        className='video_button_image'\n      />\n    </div>\n  );\n};\n\nexport default MicButton;\n","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\VideoSection\\CameraButton.js",["186"],"import React, { useState } from 'react';\n\nimport CameraButtonImg from '../../../resources/images/camera.svg';\nimport CameraButtonImgOff from '../../../resources/images/cameraOff.svg';\nimport * as webRTCHandler from '../../../utils/webRTCHandler';\n\nconst CameraButton = () => {\n  const [isLcoalVideoDisabled, setIsLcoalVideoDisabled] = useState(false);\n\n  const handleCameraButtonPressed = () => {\n    webRTCHandler.toggleCamera(isLcoalVideoDisabled);\n    setIsLcoalVideoDisabled(!isLcoalVideoDisabled);\n  };\n  return (\n    <div className='video_button_container'>\n      <img\n        src={isLcoalVideoDisabled ? CameraButtonImgOff : CameraButtonImg}\n        onClick={handleCameraButtonPressed}\n        className='video_button_image'\n      />\n    </div>\n  );\n};\n\nexport default CameraButton;\n","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\VideoSection\\SwitchToScreenSharingButton.js",["187"],"import React, { useState } from 'react';\nimport SwitchImg from '../../../resources/images/switchToScreenSharing.svg';\nimport LocalScreenSharingPreview from './LocalScreenSharingPreview';\nimport * as webRTCHandler from '../../../utils/webRTCHandler';\nconst constrains = {\n  audio: false,\n  video: true,\n};\n\nconst SwitchToScreenSharingButton = () => {\n  const [isScreenSharingActive, setIsScreenSharingActive] = useState(false);\n  const [screenSharingStream, setScreenSharingStream] = useState(null);\n  const handleScreenShareToggle = async () => {\n    if (!isScreenSharingActive) {\n      let stream = null;\n      try {\n        //获取本地要共享的媒体资源\n        stream = await navigator.mediaDevices.getDisplayMedia(constrains);\n      } catch (error) {\n        console.log('获取共享屏幕的媒体流失败');\n      }\n      if (stream) {\n        setScreenSharingStream(stream);\n        webRTCHandler.toggleScreenShare(isScreenSharingActive, stream);\n        setIsScreenSharingActive(true);\n      }\n    } else {\n      webRTCHandler.toggleScreenShare(isScreenSharingActive);\n      setIsScreenSharingActive(false);\n      //停止共享屏幕\n      screenSharingStream.getTracks().forEach((track) => track.stop());\n      setScreenSharingStream(null);\n    }\n\n    // setIsScreenSharingActive(!isScreenSharingActive);\n  };\n  return (\n    <>\n      <div className='video_button_container'>\n        <img\n          src={SwitchImg}\n          onClick={handleScreenShareToggle}\n          className='video_button_image'\n        />\n      </div>\n      {isScreenSharingActive && (\n        <LocalScreenSharingPreview stream={screenSharingStream} />\n      )}\n    </>\n  );\n};\n\nexport default SwitchToScreenSharingButton;\n","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\VideoSection\\LeaveRoomButton.js",[],"E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\ParticipantsSection\\DirectChat\\MessagesContainer.js",[],"E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\ParticipantsSection\\DirectChat\\ConversationNotChosen.js",[],"E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\ParticipantsSection\\DirectChat\\DirectChatHeader.js",[],"E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\ParticipantsSection\\DirectChat\\NewMessage.js",["188"],"import React, { useState } from 'react';\nimport sendMessageButton from '../../../../resources/images/sendMessageButton.svg';\nimport { connect } from 'react-redux';\nimport * as wss from '../../../../utils/wss';\nconst NewMessage = ({ activeConversation, identity }) => {\n  const [message, setMessage] = useState('');\n\n  const handleTextChange = (event) => {\n    setMessage(event.target.value);\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      sendMessage();\n    }\n  };\n\n  const sendMessage = () => {\n    //发送消息\n    wss.sendDirectMessage({\n      receiverSocketId: activeConversation.socketId,\n      identity: identity,\n      messageContent: message,\n    });\n    setMessage('');\n  };\n\n  return (\n    <div className='new_message_container new_message_direct_border'>\n      <input\n        className='new_message_input'\n        value={message}\n        onChange={handleTextChange}\n        placeholder='请输入消息...'\n        type='text'\n        onKeyDown={handleKeyDown}\n      />\n      <img\n        className='new_message_button'\n        src={sendMessageButton}\n        onClick={sendMessage}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    ...state,\n  };\n};\n\nexport default connect(mapStateToProps)(NewMessage);\n","E:\\onedrive\\桌面\\前端学习\\webRTC\\webRTC\\myapp\\src\\pages\\RoomPage\\VideoSection\\LocalScreenSharingPreview.js",[],{"ruleId":"189","severity":1,"message":"190","line":11,"column":6,"nodeType":"191","endLine":11,"endColumn":8,"suggestions":"192"},{"ruleId":"193","severity":1,"message":"194","line":16,"column":9,"nodeType":"195","endLine":16,"endColumn":63},{"ruleId":"189","severity":1,"message":"196","line":21,"column":6,"nodeType":"191","endLine":21,"endColumn":8,"suggestions":"197"},{"ruleId":"189","severity":1,"message":"198","line":31,"column":6,"nodeType":"191","endLine":31,"endColumn":8,"suggestions":"199"},{"ruleId":"193","severity":1,"message":"194","line":15,"column":11,"nodeType":"195","endLine":15,"endColumn":60},{"ruleId":"193","severity":1,"message":"194","line":34,"column":7,"nodeType":"195","endLine":38,"endColumn":9},{"ruleId":"193","severity":1,"message":"194","line":14,"column":7,"nodeType":"195","endLine":18,"endColumn":9},{"ruleId":"193","severity":1,"message":"194","line":16,"column":7,"nodeType":"195","endLine":20,"endColumn":9},{"ruleId":"193","severity":1,"message":"194","line":40,"column":9,"nodeType":"195","endLine":44,"endColumn":11},{"ruleId":"193","severity":1,"message":"194","line":39,"column":7,"nodeType":"195","endLine":43,"endColumn":9},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setIsRoomHostAction'. Either include it or remove the dependency array. If 'setIsRoomHostAction' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["200"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'search' and 'setIsRoomHostAction'. Either include them or remove the dependency array.",["201"],"React Hook useEffect has missing dependencies: 'connectOnlyWithAudio', 'identity', 'isRoomHost', and 'roomId'. Either include them or remove the dependency array.",["202"],{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},"Update the dependencies array to be: [setIsRoomHostAction]",{"range":"209","text":"210"},"Update the dependencies array to be: [search, setIsRoomHostAction]",{"range":"211","text":"212"},"Update the dependencies array to be: [connectOnlyWithAudio, identity, isRoomHost, roomId]",{"range":"213","text":"214"},[404,406],"[setIsRoomHostAction]",[678,680],"[search, setIsRoomHostAction]",[860,862],"[connectOnlyWithAudio, identity, isRoomHost, roomId]"]
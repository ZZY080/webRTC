{"ast":null,"code":"var _jsxFileName = \"E:\\\\onedrive\\\\\\u684C\\u9762\\\\\\u524D\\u7AEF\\u5B66\\u4E60\\\\webRTC\\\\webRTC\\\\myapp\\\\src\\\\pages\\\\RoomPage\\\\ParticipantsSection\\\\DirectChat\\\\DirectChat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ConversationNotChosen from './ConversationNotChosen';\nimport DirectChatHeader from './DirectChatHeader';\nimport MessagesContainer from './MessagesContainer';\nimport NewMessage from './NewMessage';\nimport { connect } from 'react-redux'; //获取用户的历史记录\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getDirectChatHistory = function (directChatHistory) {\n  let socketId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  //是否存在directChatHistory或者socketId\n  if (!socketId || !directChatHistory) {\n    return [];\n  }\n\n  const history = directChatHistory.find(history => history.socketId === socketId);\n  return history ? history.chatHistory : [];\n};\n\nconst DirectChat = _ref => {\n  _s();\n\n  let {\n    activeConversation,\n    directChatHistory\n  } = _ref;\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    setMessages(getDirectChatHistory(directChatHistory, activeConversation ? activeConversation.socketId : null));\n  }, [activeConversation, directChatHistory]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"direct_chat_container\",\n    children: [/*#__PURE__*/_jsxDEV(DirectChatHeader, {\n      activeConversation: activeConversation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessagesContainer, {\n      messages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), !activeConversation && /*#__PURE__*/_jsxDEV(ConversationNotChosen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DirectChat, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n\n_c = DirectChat;\n\nconst mapStateToProps = state => {\n  return { ...state\n  };\n};\n\nexport default connect(mapStateToProps)(DirectChat);\n\nvar _c;\n\n$RefreshReg$(_c, \"DirectChat\");","map":{"version":3,"sources":["E:/onedrive/桌面/前端学习/webRTC/webRTC/myapp/src/pages/RoomPage/ParticipantsSection/DirectChat/DirectChat.js"],"names":["React","useState","useEffect","ConversationNotChosen","DirectChatHeader","MessagesContainer","NewMessage","connect","getDirectChatHistory","directChatHistory","socketId","history","find","chatHistory","DirectChat","activeConversation","messages","setMessages","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;;;AACA,MAAMC,oBAAoB,GAAG,UAACC,iBAAD,EAAwC;AAAA,MAApBC,QAAoB,uEAAT,IAAS;;AACnE;AACA,MAAI,CAACA,QAAD,IAAa,CAACD,iBAAlB,EAAqC;AACnC,WAAO,EAAP;AACD;;AAED,QAAME,OAAO,GAAGF,iBAAiB,CAACG,IAAlB,CACbD,OAAD,IAAaA,OAAO,CAACD,QAAR,KAAqBA,QADpB,CAAhB;AAIA,SAAOC,OAAO,GAAGA,OAAO,CAACE,WAAX,GAAyB,EAAvC;AACD,CAXD;;AAaA,MAAMC,UAAU,GAAG,QAA+C;AAAA;;AAAA,MAA9C;AAAEC,IAAAA,kBAAF;AAAsBN,IAAAA;AAAtB,GAA8C;AAChE,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,WAAW,CACTT,oBAAoB,CAClBC,iBADkB,EAElBM,kBAAkB,GAAGA,kBAAkB,CAACL,QAAtB,GAAiC,IAFjC,CADX,CAAX;AAMD,GAPQ,EAON,CAACK,kBAAD,EAAqBN,iBAArB,CAPM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,kBAAkB,EAAEM;AAAtC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,iBAAD;AAAmB,MAAA,QAAQ,EAAEC;AAA7B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAHF,EAIG,CAACD,kBAAD,iBAAuB,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA,YAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAnBD;;GAAMD,U;;KAAAA,U;;AAqBN,MAAMI,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO,EACL,GAAGA;AADE,GAAP;AAGD,CAJD;;AAMA,eAAeZ,OAAO,CAACW,eAAD,CAAP,CAAyBJ,UAAzB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ConversationNotChosen from './ConversationNotChosen';\nimport DirectChatHeader from './DirectChatHeader';\nimport MessagesContainer from './MessagesContainer';\nimport NewMessage from './NewMessage';\nimport { connect } from 'react-redux';\n\n//获取用户的历史记录\nconst getDirectChatHistory = (directChatHistory, socketId = null) => {\n  //是否存在directChatHistory或者socketId\n  if (!socketId || !directChatHistory) {\n    return [];\n  }\n\n  const history = directChatHistory.find(\n    (history) => history.socketId === socketId\n  );\n\n  return history ? history.chatHistory : [];\n};\n\nconst DirectChat = ({ activeConversation, directChatHistory }) => {\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    setMessages(\n      getDirectChatHistory(\n        directChatHistory,\n        activeConversation ? activeConversation.socketId : null\n      )\n    );\n  }, [activeConversation, directChatHistory]);\n  return (\n    <div className='direct_chat_container'>\n      <DirectChatHeader activeConversation={activeConversation} />\n      <MessagesContainer messages={messages} />\n      <NewMessage />\n      {!activeConversation && <ConversationNotChosen />}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    ...state,\n  };\n};\n\nexport default connect(mapStateToProps)(DirectChat);\n"]},"metadata":{},"sourceType":"module"}
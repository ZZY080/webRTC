{"ast":null,"code":"var _jsxFileName = \"E:\\\\onedrive\\\\\\u684C\\u9762\\\\\\u524D\\u7AEF\\u5B66\\u4E60\\\\webRTC\\\\webRTC\\\\myapp\\\\src\\\\pages\\\\RoomPage\\\\ParticipantsSection\\\\Participants.js\";\nimport React from 'react';\nimport { setActiveConversation } from '../../../store/actions';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SingelParticipant = props => {\n  const {\n    identity,\n    lastItem,\n    participant,\n    setActiveConversationAction,\n    socketId\n  } = props; //激活私信聊天，获取对象信息\n\n  const handleOpenActiveConversation = () => {\n    if (participant.socketId !== socketId) {\n      setActiveConversationAction(participant);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"participants_paragraph\",\n      onClick: handleOpenActiveConversation,\n      children: identity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), !lastItem && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"participants_separator_line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n};\n\n_c = SingelParticipant;\n\nconst Participants = _ref => {\n  let {\n    participants,\n    setActiveConversationAction,\n    socketId\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"participants_container\",\n    children: participants.map((participant, index) => {\n      return /*#__PURE__*/_jsxDEV(SingelParticipant, {\n        identity: participant.identity,\n        lastItem: participants.length === index + 1,\n        participant: participant,\n        setActiveConversationAction: setActiveConversationAction,\n        socketId: socketId\n      }, participant.identity, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Participants;\n\nconst mapStateToProps = state => {\n  return { ...state\n  };\n};\n\nconst mapActionsToProps = dispatch => {\n  return {\n    setActiveConversationAction: activeConversation => {\n      dispatch(setActiveConversation(activeConversation));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(Participants);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SingelParticipant\");\n$RefreshReg$(_c2, \"Participants\");","map":{"version":3,"sources":["E:/onedrive/桌面/前端学习/webRTC/webRTC/myapp/src/pages/RoomPage/ParticipantsSection/Participants.js"],"names":["React","setActiveConversation","connect","SingelParticipant","props","identity","lastItem","participant","setActiveConversationAction","socketId","handleOpenActiveConversation","Participants","participants","map","index","length","mapStateToProps","state","mapActionsToProps","dispatch","activeConversation"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,qBAAT,QAAsC,wBAAtC;AACA,SAASC,OAAT,QAAwB,aAAxB;;;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACnC,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,WAHI;AAIJC,IAAAA,2BAJI;AAKJC,IAAAA;AALI,MAMFL,KANJ,CADmC,CASnC;;AACA,QAAMM,4BAA4B,GAAG,MAAM;AACzC,QAAIH,WAAW,CAACE,QAAZ,KAAyBA,QAA7B,EAAuC;AACrCD,MAAAA,2BAA2B,CAACD,WAAD,CAA3B;AACD;AACF,GAJD;;AAKA,sBACE;AAAA,4BACE;AACE,MAAA,SAAS,EAAC,wBADZ;AAEE,MAAA,OAAO,EAAEG,4BAFX;AAAA,gBAIGL;AAJH;AAAA;AAAA;AAAA;AAAA,YADF,EAOG,CAACC,QAAD,iBAAa;AAAM,MAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,YAPhB;AAAA,kBADF;AAWD,CA1BD;;KAAMH,iB;;AA4BN,MAAMQ,YAAY,GAAG,QAIf;AAAA,MAJgB;AACpBC,IAAAA,YADoB;AAEpBJ,IAAAA,2BAFoB;AAGpBC,IAAAA;AAHoB,GAIhB;AACJ,sBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,cACGG,YAAY,CAACC,GAAb,CAAiB,CAACN,WAAD,EAAcO,KAAd,KAAwB;AACxC,0BACE,QAAC,iBAAD;AACE,QAAA,QAAQ,EAAEP,WAAW,CAACF,QADxB;AAEE,QAAA,QAAQ,EAAEO,YAAY,CAACG,MAAb,KAAwBD,KAAK,GAAG,CAF5C;AAGE,QAAA,WAAW,EAAEP,WAHf;AAKE,QAAA,2BAA2B,EAAEC,2BAL/B;AAME,QAAA,QAAQ,EAAEC;AANZ,SAIOF,WAAW,CAACF,QAJnB;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAXA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CArBD;;MAAMM,Y;;AAuBN,MAAMK,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO,EACL,GAAGA;AADE,GAAP;AAGD,CAJD;;AAMA,MAAMC,iBAAiB,GAAIC,QAAD,IAAc;AACtC,SAAO;AACLX,IAAAA,2BAA2B,EAAGY,kBAAD,IAAwB;AACnDD,MAAAA,QAAQ,CAAClB,qBAAqB,CAACmB,kBAAD,CAAtB,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAelB,OAAO,CAACc,eAAD,EAAkBE,iBAAlB,CAAP,CAA4CP,YAA5C,CAAf","sourcesContent":["import React from 'react';\nimport { setActiveConversation } from '../../../store/actions';\nimport { connect } from 'react-redux';\n\nconst SingelParticipant = (props) => {\n  const {\n    identity,\n    lastItem,\n    participant,\n    setActiveConversationAction,\n    socketId,\n  } = props;\n\n  //激活私信聊天，获取对象信息\n  const handleOpenActiveConversation = () => {\n    if (participant.socketId !== socketId) {\n      setActiveConversationAction(participant);\n    }\n  };\n  return (\n    <>\n      <p\n        className='participants_paragraph'\n        onClick={handleOpenActiveConversation}\n      >\n        {identity}\n      </p>\n      {!lastItem && <span className='participants_separator_line'></span>}\n    </>\n  );\n};\n\nconst Participants = ({\n  participants,\n  setActiveConversationAction,\n  socketId,\n}) => {\n  return (\n    <div className='participants_container'>\n      {participants.map((participant, index) => {\n        return (\n          <SingelParticipant\n            identity={participant.identity}\n            lastItem={participants.length === index + 1}\n            participant={participant}\n            key={participant.identity}\n            setActiveConversationAction={setActiveConversationAction}\n            socketId={socketId}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    ...state,\n  };\n};\n\nconst mapActionsToProps = (dispatch) => {\n  return {\n    setActiveConversationAction: (activeConversation) => {\n      dispatch(setActiveConversation(activeConversation));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(Participants);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"E:\\\\onedrive\\\\\\u684C\\u9762\\\\\\u524D\\u7AEF\\u5B66\\u4E60\\\\webRTC\\\\webRTC\\\\myapp\\\\src\\\\pages\\\\RoomPage\\\\RoomPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport ChatSection from './ChatSection/ChatSection';\nimport ParticipantsSection from './ParticipantsSection/ParticipantsSection';\nimport RoomLabel from './RoomLabel';\nimport { connect } from 'react-redux';\nimport * as webRTCHandler from '../../utils/webRTCHandler';\nimport './Roompage.css';\nimport VideoSection from './VideoSection/VideoSection';\nimport Overlay from './Overlay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RoomPage = _ref => {\n  _s();\n\n  let {\n    roomId,\n    isRoomHost,\n    identity,\n    showOverlay,\n    connectOnlyWithAudio\n  } = _ref;\n  useEffect(() => {\n    //路由守卫\n    if (!isRoomHost && !roomId) {\n      // 动态获取接口\n      const siteUrl = window.location.origin; // 设置当前定向到的URL\n\n      window.location.href = siteUrl;\n    }\n\n    webRTCHandler.getLocalPreviewAndInitRoomConnection(isRoomHost, identity, roomId, connectOnlyWithAudio);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room_container\",\n    children: [/*#__PURE__*/_jsxDEV(ParticipantsSection, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoSection, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatSection, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RoomLabel, {\n      roomId: roomId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), showOverlay && /*#__PURE__*/_jsxDEV(Overlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RoomPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = RoomPage;\n\nconst mapStateToProps = state => {\n  return { ...state\n  };\n};\n\nexport default connect(mapStateToProps)(RoomPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"RoomPage\");","map":{"version":3,"sources":["E:/onedrive/桌面/前端学习/webRTC/webRTC/myapp/src/pages/RoomPage/RoomPage.js"],"names":["React","useEffect","ChatSection","ParticipantsSection","RoomLabel","connect","webRTCHandler","VideoSection","Overlay","RoomPage","roomId","isRoomHost","identity","showOverlay","connectOnlyWithAudio","siteUrl","window","location","origin","href","getLocalPreviewAndInitRoomConnection","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,mBAAP,MAAgC,2CAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,aAAZ,MAA+B,2BAA/B;AACA,OAAO,gBAAP;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AACA,MAAMC,QAAQ,GAAG,QAMX;AAAA;;AAAA,MANY;AAChBC,IAAAA,MADgB;AAEhBC,IAAAA,UAFgB;AAGhBC,IAAAA,QAHgB;AAIhBC,IAAAA,WAJgB;AAKhBC,IAAAA;AALgB,GAMZ;AACJb,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAI,CAACU,UAAD,IAAe,CAACD,MAApB,EAA4B;AAC1B;AACA,YAAMK,OAAO,GAAGC,MAAM,CAACC,QAAP,CAAgBC,MAAhC,CAF0B,CAG1B;;AACAF,MAAAA,MAAM,CAACC,QAAP,CAAgBE,IAAhB,GAAuBJ,OAAvB;AACD;;AACDT,IAAAA,aAAa,CAACc,oCAAd,CACET,UADF,EAEEC,QAFF,EAGEF,MAHF,EAIEI,oBAJF;AAMD,GAdQ,EAcN,EAdM,CAAT;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEJ;AAAnB;AAAA;AAAA;AAAA;AAAA,YAJF,EAKGG,WAAW,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YALlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAhCD;;GAAMJ,Q;;KAAAA,Q;;AAiCN,MAAMY,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO,EACL,GAAGA;AADE,GAAP;AAGD,CAJD;;AAKA,eAAejB,OAAO,CAACgB,eAAD,CAAP,CAAyBZ,QAAzB,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport ChatSection from './ChatSection/ChatSection';\nimport ParticipantsSection from './ParticipantsSection/ParticipantsSection';\nimport RoomLabel from './RoomLabel';\nimport { connect } from 'react-redux';\nimport * as webRTCHandler from '../../utils/webRTCHandler';\nimport './Roompage.css';\nimport VideoSection from './VideoSection/VideoSection';\nimport Overlay from './Overlay';\nconst RoomPage = ({\n  roomId,\n  isRoomHost,\n  identity,\n  showOverlay,\n  connectOnlyWithAudio,\n}) => {\n  useEffect(() => {\n    //路由守卫\n    if (!isRoomHost && !roomId) {\n      // 动态获取接口\n      const siteUrl = window.location.origin;\n      // 设置当前定向到的URL\n      window.location.href = siteUrl;\n    }\n    webRTCHandler.getLocalPreviewAndInitRoomConnection(\n      isRoomHost,\n      identity,\n      roomId,\n      connectOnlyWithAudio\n    );\n  }, []);\n\n  return (\n    <div className='room_container'>\n      <ParticipantsSection />\n      <VideoSection />\n      <ChatSection />\n      <RoomLabel roomId={roomId} />\n      {showOverlay && <Overlay />}\n    </div>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    ...state,\n  };\n};\nexport default connect(mapStateToProps)(RoomPage);\n"]},"metadata":{},"sourceType":"module"}